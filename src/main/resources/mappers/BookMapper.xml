<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leiduoduo.abss.dao.BookDao">
    <select id="getBookList" resultType="Book" parameterType="int">
        select * from book where exist = 1 limit #{current},20;
    </select>
    <select id="getBookTotal" resultType="int">
        select count(*) from book where exist = 1;
    </select>
    <insert id="addBook" parameterType="Book">
        insert into
        book (
        bookCode,
        bookName,
        ISBN,
        press,
        src,
        author,
        edition,
        sortCode,
        sortName,
        shopCode,
        message,
        price,
        number,
        shopNumber,
        createAt,
        updateAt
        )
        values (
        #{bookCode},
        #{bookName},
        #{ISBN},
        #{press},
        #{src},
        #{author},
        #{edition},
        #{sortCode},
        #{sortName},
        #{shopCode},
        #{message},
        #{price},
        #{number},
        #{shopNumber},
        now(),
        now()
        );
    </insert>
    <select id="selectBookList" parameterType="String" resultType="Book">
        select * from book where bookName like concat("%",#{condition},"%") or author like concat("%",#{condition},"%") or ISBN like concat("%",#{condition},"%") ;
    </select>
    <select id="getBookRankList" parameterType="String" resultType="Book">
        select * from book
        <if test="sortName != null and sortName != ''">
            where sortCode in (SELECT sortCode FROM sort where sortName = #{sortName})
        </if>
        order by shopNumber DESC ;
    </select>
    <select id="getBookListBySort" parameterType="String" resultType="Book">
        select * from book
        <if test="sortName != null and sortName != ''">
            where sortCode in (SELECT sortCode FROM sort where sortName = #{sortName})
        </if>
        order by createAt DESC;
    </select>
    <select id="getBookListByCode" parameterType="String" resultType="Book">
        select * from book where bookCode = #{bookCode}
    </select>
    <select id="getBookListByShopCode" parameterType="map" resultType="Book">
        select * from book where shopCode = #{shopCode} and exist = 1 limit #{current},20;
    </select>
    <select id="getBookListTotalByShopCode" parameterType="String" resultType="int">
        select count(*) from book where shopCode = #{shopCode} and exist = 1;
    </select>
    <select id="getBookTopByShopCode" parameterType="String" resultType="Book">
      select * from book where shopCode = #{shopCode} and exist = 1 order by shopNumber desc limit 0,5;
    </select>
    <select id="getSortTopByShopCode" parameterType="String" resultType="Book">
      SELECT count(id) as id,sortName from book where shopCode = #{shopCode} GROUP BY sortName order by id desc limit 0,5;
    </select>
    <update id="updateBook" parameterType="Book">
        update book set
        bookName = #{bookName},
        ISBN = #{ISBN},
        src = #{src},
        press = #{press},
        author = #{author},
        edition = #{edition},
        shopNumber = #{shopNumber},
        sortCode = #{sortCode},
        sortName = #{sortName},
        shopCode = #{shopCode},
        message = #{message},
        price = #{price},
        number = #{number},
        createAt = now(),
        updateAt = now()
        where shopCode = #{shopCode} and bookCode = #{bookCode};
    </update>
    <update id="delBookByCode" parameterType="String">
        update book set exist = 0 where bookCode = #{bookCode};
    </update>
    <update id="bookNumberSub1" parameterType="String">
        update book set number = number-1, shopNumber = shopNumber+1 where bookCode = #{bookCode};
    </update>
</mapper>
